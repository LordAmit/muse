package com.example.amit.helloworld.test;

public class TestClass {
    javax.crypto.Cipher cipher_leak11 = null; 
	javax.crypto.Cipher cipher_leak8 = null; 
	javax.crypto.Cipher cipher_leak5 = null; 
	javax.crypto.Cipher cipher_leak3 = null; 
	javax.crypto.Cipher cipher_leak1 = null; 
	javax.crypto.Cipher cipher_leak0 = null; 
	int methodA(){
        try {
			cipher_leak0 = javax.crypto.Cipher.getInstance("AES");
			android.util.Log.d("leak-0-0", cipher_leak0.getAlgorithm())
			android.util.Log.d("leak-1-0", cipher_leak1.getAlgorithm())
			android.util.Log.d("leak-3-0", cipher_leak3.getAlgorithm())
			android.util.Log.d("leak-5-0", cipher_leak5.getAlgorithm())
			android.util.Log.d("leak-8-0", cipher_leak8.getAlgorithm())
			android.util.Log.d("leak-11-0", cipher_leak11.getAlgorithm())
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 1;
    }
    int methodB(){
        try {
			cipher_leak1 = javax.crypto.Cipher.getInstance("AES");
			android.util.Log.d("leak-0-1", cipher_leak0.getAlgorithm())
			android.util.Log.d("leak-1-1", cipher_leak1.getAlgorithm())
			android.util.Log.d("leak-3-1", cipher_leak3.getAlgorithm())
			android.util.Log.d("leak-5-1", cipher_leak5.getAlgorithm())
			android.util.Log.d("leak-8-1", cipher_leak8.getAlgorithm())
			android.util.Log.d("leak-11-1", cipher_leak11.getAlgorithm())
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 2;
    }
    class ChildClassLevelOne{
        javax.crypto.Cipher cipher_leak10 = null; 
		javax.crypto.Cipher cipher_leak7 = null; 
		javax.crypto.Cipher cipher_leak4 = null; 
		javax.crypto.Cipher cipher_leak2 = null; 
		int methodConeA(){
            try {
				cipher_leak3 = javax.crypto.Cipher.getInstance("AES");
				android.util.Log.d("leak-3-2", cipher_leak3.getAlgorithm())
			} catch (Exception e) {
				e.printStackTrace();
			}
			try {
				cipher_leak2 = javax.crypto.Cipher.getInstance("AES");
				android.util.Log.d("leak-2-2", cipher_leak2.getAlgorithm())
				android.util.Log.d("leak-4-2", cipher_leak4.getAlgorithm())
				android.util.Log.d("leak-7-2", cipher_leak7.getAlgorithm())
				android.util.Log.d("leak-10-2", cipher_leak10.getAlgorithm())
				android.util.Log.d("leak-0-2", cipher_leak0.getAlgorithm())
				android.util.Log.d("leak-1-2", cipher_leak1.getAlgorithm())
				android.util.Log.d("leak-5-2", cipher_leak5.getAlgorithm())
				android.util.Log.d("leak-8-2", cipher_leak8.getAlgorithm())
				android.util.Log.d("leak-11-2", cipher_leak11.getAlgorithm())
			} catch (Exception e) {
				e.printStackTrace();
			}
			return 1;
        }
        int methodCOneB(){
            try {
				cipher_leak5 = javax.crypto.Cipher.getInstance("AES");
				android.util.Log.d("leak-5-3", cipher_leak5.getAlgorithm())
			} catch (Exception e) {
				e.printStackTrace();
			}
			try {
				cipher_leak4 = javax.crypto.Cipher.getInstance("AES");
				android.util.Log.d("leak-2-3", cipher_leak2.getAlgorithm())
				android.util.Log.d("leak-4-3", cipher_leak4.getAlgorithm())
				android.util.Log.d("leak-7-3", cipher_leak7.getAlgorithm())
				android.util.Log.d("leak-10-3", cipher_leak10.getAlgorithm())
				android.util.Log.d("leak-0-3", cipher_leak0.getAlgorithm())
				android.util.Log.d("leak-1-3", cipher_leak1.getAlgorithm())
				android.util.Log.d("leak-3-3", cipher_leak3.getAlgorithm())
				android.util.Log.d("leak-8-3", cipher_leak8.getAlgorithm())
				android.util.Log.d("leak-11-3", cipher_leak11.getAlgorithm())
			} catch (Exception e) {
				e.printStackTrace();
			}
			return 2;
        }
        class ChildClassLevelTwo{
            javax.crypto.Cipher cipher_leak9 = null; 
			javax.crypto.Cipher cipher_leak6 = null; 
			int methodCTwoA(){
                try {
					cipher_leak8 = javax.crypto.Cipher.getInstance("AES");
					android.util.Log.d("leak-8-4", cipher_leak8.getAlgorithm())
				} catch (Exception e) {
					e.printStackTrace();
				}
				try {
					cipher_leak7 = javax.crypto.Cipher.getInstance("AES");
					android.util.Log.d("leak-7-4", cipher_leak7.getAlgorithm())
				} catch (Exception e) {
					e.printStackTrace();
				}
				try {
					cipher_leak6 = javax.crypto.Cipher.getInstance("AES");
					android.util.Log.d("leak-6-4", cipher_leak6.getAlgorithm())
					android.util.Log.d("leak-9-4", cipher_leak9.getAlgorithm())
					android.util.Log.d("leak-2-4", cipher_leak2.getAlgorithm())
					android.util.Log.d("leak-4-4", cipher_leak4.getAlgorithm())
					android.util.Log.d("leak-10-4", cipher_leak10.getAlgorithm())
					android.util.Log.d("leak-0-4", cipher_leak0.getAlgorithm())
					android.util.Log.d("leak-1-4", cipher_leak1.getAlgorithm())
					android.util.Log.d("leak-3-4", cipher_leak3.getAlgorithm())
					android.util.Log.d("leak-5-4", cipher_leak5.getAlgorithm())
					android.util.Log.d("leak-11-4", cipher_leak11.getAlgorithm())
				} catch (Exception e) {
					e.printStackTrace();
				}
				return 1;
            }
            int methodCTwoB(){
                try {
					cipher_leak11 = javax.crypto.Cipher.getInstance("AES");
					android.util.Log.d("leak-11-5", cipher_leak11.getAlgorithm())
				} catch (Exception e) {
					e.printStackTrace();
				}
				try {
					cipher_leak10 = javax.crypto.Cipher.getInstance("AES");
					android.util.Log.d("leak-10-5", cipher_leak10.getAlgorithm())
				} catch (Exception e) {
					e.printStackTrace();
				}
				try {
					cipher_leak9 = javax.crypto.Cipher.getInstance("AES");
					android.util.Log.d("leak-6-5", cipher_leak6.getAlgorithm())
					android.util.Log.d("leak-9-5", cipher_leak9.getAlgorithm())
					android.util.Log.d("leak-2-5", cipher_leak2.getAlgorithm())
					android.util.Log.d("leak-4-5", cipher_leak4.getAlgorithm())
					android.util.Log.d("leak-7-5", cipher_leak7.getAlgorithm())
					android.util.Log.d("leak-0-5", cipher_leak0.getAlgorithm())
					android.util.Log.d("leak-1-5", cipher_leak1.getAlgorithm())
					android.util.Log.d("leak-3-5", cipher_leak3.getAlgorithm())
					android.util.Log.d("leak-5-5", cipher_leak5.getAlgorithm())
					android.util.Log.d("leak-8-5", cipher_leak8.getAlgorithm())
				} catch (Exception e) {
					e.printStackTrace();
				}
				return 2;
            }
        }
    }


}